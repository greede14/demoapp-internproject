steps:
  - task: dependency-check-build-task@6
    inputs:
      projectName: $(System.TeamProject)
      scanPath: $(Pipeline.Workspace)
      format: 'HTML'
      reportsDirectory: .
      reportFilename: 'DependencyCheck'
# jobs:
#   - job: Dependency Check
#     displayName: "detect-secrets"
#     pool:
#       name: Default
#     steps:
#       - task: UsePythonVersion@0
#         displayName: "Set Python 3 as default"
#         inputs:
#           versionSpec: "3"
#           addToPath: true
#           architecture: "x64"

#       - script: pip install detect-secrets
#         displayName: "Install detect-secrets using pip"

#       - script: |
#           detect-secrets --version
#           detect-secrets scan --all-files --force-use-all-plugins > azure-pipeline/intern/detect-secrets.json
#         displayName: "Run detect-secrets tool"
      


#       - task: PublishPipelineArtifact@1
#         inputs:
#           targetPath: azure-pipeline/intern/detect-secrets.json
#           artifact: "detect-secrets-windows"
#           publishLocation: 'pipeline'

#       - pwsh: |
#           $dsjson = Get-Content azure-pipeline/intern/detect-secrets.json
#           Write-Output $dsjson

#           $dsObj = $dsjson | ConvertFrom-Json
#           $count = ($dsObj.results | Get-Member -MemberType NoteProperty).Count

#           if ($count -gt 0) {
#             $msg = "Secrets were detected in code. $count file(s) affected. "
#             Write-Host "##vso[task.logissue type=error]$msg"
#             Write-Host "##vso[task.complete result=Failed;]$msg"
#           }
#           else {
#             Write-Host "##vso[task.complete result=Succeeded;]No secrets detected."
#           }
#         displayName: "Analyzing detect-secrets results"