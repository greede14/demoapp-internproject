trigger:
  branches:
    include:
      - master

jobs:
- job: BuildAndPushDockerImage
  displayName: 'Build and Push Docker Image'
  pool:
    name : default
  steps:
  - task: Docker@2
    displayName: 'Login to Docker Hub'
    inputs:
      command: login
      containerRegistry: 'dockerhub'
      dockerRegistryConnection: 'DockerHub' # Replace with your Docker Hub service connection name

  - script: |
      docker build -t greede14/demoapp-intern:latest .
      docker push greede14/demoapp-intern:latest
      docker rm -f greede14/demoapp-intern:latest
    displayName: 'Build and Push Docker Image'



  - script: |
      docker save greede14/demoapp-intern:latest -o $(Pipeline.Workspace)/demoapp-intern-image.tar
    displayName: 'save docker image as file'

  - task: PublishPipelineArtifact@1
    inputs:
        targetPath: '$(Pipeline.Workspace)/demoapp-intern-image.tar'
        artifact: 'docker image artifact'
        publishLocation: 'pipeline'
  - task: Docker@2
    displayName: 'Logout from Docker Hub'
    inputs:
      command: logout
      containerRegistry: 'dockerhub'
      dockerRegistryConnection: 'DockerHub' # Replace with your Docker Hub service connection name

  - script: |
      docker run --name trivyimagescanner aquasec/trivy image --format sarif -o ./trivyimagescan.sarif greede14/demoapp-intern:latest
      docker exec trivyimagescanner fs --scanners vuln,secret,config --format sarif -o ./trivycodescan.sarif $(Pipeline.Workspace)
      docker cp trivyimagescanner:*.sarif $(Pipeline.Workspace)
      docker rm -f trivyimagescanner
    displayName: 'Trivy image scan'
  - task: PublishPipelineArtifact@1
    inputs:
        targetPath: $(Pipeline.Workspace)/trivyimagescan.sarif
        artifact: 'CodeAnalysisLogs'
        publishLocation: 'pipeline'
    displayName: 'publish trivyimagescan.sarif'
  - task: PublishPipelineArtifact@1
    inputs:
        targetPath: $(Pipeline.Workspace)/trivycodescan.sarif
        artifact: 'CodeAnalysisLogs'
        publishLocation: 'pipeline'
    displayName: 'publish trivycodescan.sarif'
        
#  - task: PublishBuildArtifacts@1
#    inputs:
#      pathToPublish: $(Pipeline.Workspace)/trivyimagescan.sarif
#      artifactName: CodeAnalysisLogs